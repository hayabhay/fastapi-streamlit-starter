[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
package-mode = false
name = "fastapi-streamlit-starter"
version = "0.0.1"
description = "FastAPI Streamlit Starter"
homepage = "https://hayabhay.github.io/fastapi-streamlit-starter"
repository = "https://github.com/hayabhay/fastapi-streamlit-starter"
documentation = "https://hayabhay.github.io/fastapi-streamlit-starter/docs"
authors = ["Abhay Kashyap"]
readme = "README.md"
license =  "MIT"

[tool.poetry.urls]
Changelog = "https://github.com/hayabhay/fastapi-streamlit-starter/releases"

[tool.poetry.dependencies]
python = "^3.12.7"
python-dotenv = "^1.0.1"
loguru = "^0.7.2"
fastapi = "^0.115.3"
httpx = "^0.27.2"
uvicorn = "^0.32.0"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
pip = "^24.2"
pre-commit = "^4.0.1"
ruff = "^0.7.0"
streamlit = "^1.39.0"
invoke = "^2.2.0"
# Test
pytest = "^8.3.3"
pytest-cov = "^5.0.0"
tox = "^4.23.2"
# Documenation
mkdocs = "^1.6.1"
mkdocs-material = "^9.5.42"
mkdocstrings = "^0.26.2"
mkdocs-autorefs = "^1.2.0"
mkdocs-include-markdown-plugin = "^7.0.0"
mike = "^2.1.3"

[tool.poetry.group.prod]
optional = true

[tool.poetry.group.prod.dependencies]
gunicorn = "^23.0.0"
google-cloud-logging = "^3.11.3"

# ==== ruff ====
[tool.ruff]

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

indent-width = 4
line-length = 88

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
]

ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"


[tool.ruff.format]
indent-style = "space"

quote-style = "double"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false
# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = true

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"


# ==== pytest ====
[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q"
testpaths = [
    "tests",
    "integration",
]

# ==== Coverage ====
[tool.coverage.paths]
source = ["src", "*/site-packages"]
tests = ["tests", "*/tests"]

[tool.coverage.run]
branch = true
source = ["tests"]

# ==== mypy ====
[tool.mypy]
python_version = "3.12"
check_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
